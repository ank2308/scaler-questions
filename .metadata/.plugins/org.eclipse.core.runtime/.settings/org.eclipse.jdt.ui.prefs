content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="NIntegers"><rhs name\="NIntegers"/></lhs><lhs name\="java.util.Deque"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="ReverseNElements"><rhs name\="ReverseNElements"/></lhs><lhs name\="SumOfMinMax"><rhs name\="SumOfMinMax"/></lhs><lhs name\="ReverseListFromN"><rhs name\="ReverseListFromN"/></lhs><lhs name\="LogestCommonPrefix"><rhs name\="LogestCommonPrefix"/></lhs><lhs name\="ReverseString"><rhs name\="ReverseString"/></lhs><lhs name\="BoringString"><rhs name\="BoringString"/></lhs><lhs name\="RandomListNode"><rhs name\="RandomListNode"/></lhs><lhs name\="Interval"><rhs name\="Interval"/></lhs><lhs name\="MergeIntervals"><rhs name\="MergeIntervals"/></lhs><lhs name\="SmallestBaseCode"><rhs name\="SmallestBaseCode"/></lhs><lhs name\="AthMagicalNum"><rhs name\="AthMagicalNum"/></lhs><lhs name\="AllocateBooks"><rhs name\="AllocateBooks"/></lhs><lhs name\="SpecialInteger"><rhs name\="SpecialInteger"/></lhs><lhs name\="RotatedArraySearch"><rhs name\="RotatedArraySearch"/></lhs><lhs name\="TreeNode"><rhs name\="TreeNode"/></lhs><lhs name\="LevelOrderTraversal"><rhs name\="LevelOrderTraversal"/></lhs><lhs name\="HeightBalancedBinaryTree$Info"><rhs name\="HeightBalancedBinaryTree$Info"/></lhs><lhs name\="CheckBSTWithOneChild"><rhs name\="CheckBSTWithOneChild"/></lhs><lhs name\="IdenticalBinaryTree"><rhs name\="IdenticalBinaryTree"/></lhs><lhs name\="FindANodeInBST"><rhs name\="FindANodeInBST"/></lhs><lhs name\="SumOfCommonNodeInBST"><rhs name\="SumOfCommonNodeInBST"/></lhs><lhs name\="InvertBinaryTree"><rhs name\="InvertBinaryTree"/></lhs><lhs name\="NextPointerBinaryTree"><rhs name\="NextPointerBinaryTree"/></lhs><lhs name\="EqualTreePartition"><rhs name\="EqualTreePartition"/></lhs><lhs name\="EqualTreePartition$Info"><rhs name\="EqualTreePartition$Info"/></lhs><lhs name\="KthSmallestelement"><rhs name\="KthSmallestelement"/></lhs><lhs name\="SpellingCheckerUsingTries$TrieNode"><rhs name\="SpellingCheckerUsingTries$TrieNode"/></lhs><lhs name\="SpellingCheckerUsingTries"><rhs name\="SpellingCheckerUsingTries"/></lhs><lhs name\="java.util.Iterator"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.Stack"/><rhs name\="java.util.concurrent.ArrayBlockingQueue"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.Stack"/><rhs name\="java.util.concurrent.ArrayBlockingQueue"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.HashSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.HashMap"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.HashSet"/><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.Stack"/><rhs name\="java.util.concurrent.ArrayBlockingQueue"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.ArrayList"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="AutoComplete"><rhs name\="AutoComplete"/></lhs><lhs name\="ShortestUniquePrefix$TrieNode"><rhs name\="ShortestUniquePrefix$TrieNode"/></lhs><lhs name\="ShortestUniquePrefix"><rhs name\="ShortestUniquePrefix"/></lhs><lhs name\="BurMaxMobilePhone"><rhs name\="BurMaxMobilePhone"/></lhs><lhs name\="PositionSequence"><rhs name\="PositionSequence"/></lhs><lhs name\="Permutation"><rhs name\="Permutation"/></lhs><lhs name\="java.lang.Thread"><rhs name\="ThreadDemo"/><rhs name\="ThreadExample"/></lhs><lhs name\="java.lang.Runnable"><rhs name\="ThreadDemo"/><rhs name\="ThreadExample"/></lhs><lhs name\="ThreadDemo"><rhs name\="ThreadDemo"/></lhs><lhs name\="HeapSortExample"><rhs name\="HeapSortExample"/></lhs><lhs name\="MaxArraySumAfterBNegations"><rhs name\="MaxArraySumAfterBNegations"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.HashMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.AbstractQueue"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.concurrent.ArrayBlockingQueue"/></lhs><lhs name\="java.util.PriorityQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="Overloaded"><rhs name\="Overloaded"/></lhs><lhs name\="MaxProductInSubArray"><rhs name\="MaxProductInSubArray"/></lhs><lhs name\="TwoNumbers"><rhs name\="TwoNumbers"/></lhs><lhs name\="LongestUniqueSubstring"><rhs name\="LongestUniqueSubstring"/></lhs><lhs name\="MultiplyFoundValueByTwo"><rhs name\="MultiplyFoundValueByTwo"/></lhs><lhs name\="Program"><rhs name\="Program"/></lhs><lhs name\="Class1"><rhs name\="Class1"/><rhs name\="Class2"/></lhs><lhs name\="ThreadExample"><rhs name\="ThreadExample"/></lhs><lhs name\="Class2"><rhs name\="Class2"/></lhs><lhs name\="FinalProblem"><rhs name\="FinalProblem"/></lhs><lhs name\="WaysToDecode"><rhs name\="WaysToDecode"/></lhs><lhs name\="LongestCommonSubsequence"><rhs name\="LongestCommonSubsequence"/></lhs><lhs name\="FindUniquePath"><rhs name\="FindUniquePath"/></lhs><lhs name\="MinEditDistance"><rhs name\="MinEditDistance"/></lhs><lhs name\="CoinSumInfinite"><rhs name\="CoinSumInfinite"/></lhs><lhs name\="LeetCodeWaterDripping"><rhs name\="LeetCodeWaterDripping"/></lhs><lhs name\="RemoveDuplicateFromSortedArray"><rhs name\="RemoveDuplicateFromSortedArray"/></lhs><lhs name\="ValidWordSquare"><rhs name\="ValidWordSquare"/></lhs><lhs name\="KeyboardRow"><rhs name\="KeyboardRow"/></lhs><lhs name\="MEX"><rhs name\="MEX"/></lhs><lhs name\="FreeCars"><rhs name\="FreeCars"/></lhs><lhs name\="DistributeCandy"><rhs name\="DistributeCandy"/></lhs><lhs name\="PalindromeNumber"><rhs name\="PalindromeNumber"/></lhs><lhs name\="PalindromePartioning"><rhs name\="PalindromePartioning"/></lhs><lhs name\="Knapsack01"><rhs name\="Knapsack01"/></lhs><lhs name\="java.util.Vector"><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.Stack"><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.concurrent.CountDownLatch"><rhs name\="java.util.concurrent.CountDownLatch"/></lhs><lhs name\="DepthFirstSearch"><rhs name\="DepthFirstSearch"/></lhs><lhs name\="RottenOranges"><rhs name\="RottenOranges"/></lhs><lhs name\="CheckBiPartiteGraph"><rhs name\="CheckBiPartiteGraph"/></lhs><lhs name\="java.util.concurrent.BlockingQueue"><rhs name\="java.util.concurrent.ArrayBlockingQueue"/></lhs><lhs name\="java.util.concurrent.ArrayBlockingQueue"><rhs name\="java.util.concurrent.ArrayBlockingQueue"/></lhs><lhs name\="java.util.concurrent.locks.Lock"><rhs name\="java.util.concurrent.locks.ReentrantLock"/></lhs><lhs name\="java.util.concurrent.locks.ReentrantLock"><rhs name\="java.util.concurrent.locks.ReentrantLock"/></lhs><lhs name\="MyBlockingQueue"><rhs name\="MyBlockingQueue"/></lhs><lhs name\="java.util.concurrent.AbstractExecutorService"><rhs name\="java.util.concurrent.ThreadPoolExecutor"/></lhs><lhs name\="java.util.concurrent.ExecutorService"><rhs name\="java.util.concurrent.ThreadPoolExecutor"/></lhs><lhs name\="java.util.concurrent.Executor"><rhs name\="java.util.concurrent.ThreadPoolExecutor"/></lhs><lhs name\="java.util.concurrent.ThreadPoolExecutor"><rhs name\="java.util.concurrent.ThreadPoolExecutor"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.Queue"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="TopologicalSort"><rhs name\="TopologicalSort"/></lhs></history>
content_assist_number_of_computers=16
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
markOccurrences=false
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles.version=21
spelling_locale_initialized=true
typefilter_migrated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true


public class RegularExpMatch {

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String A = "aaaaaaaaaaaaaaa";
		String B = "a*******************************";
		RegularExpMatch rm = new RegularExpMatch();
		
		System.out.println(rm.isMatch(A, B));
	}
	
	public int isMatch(String A, String B) {
		int [][] dp = new int [A.length()+1][B.length()+1];
		for (int i = 0; i < A.length()+1; i++) {
			for (int j = 0; j < B.length()+1; j++) {
				dp[i][j] = -1;
			}
		}
			return matchWildCard(A, B, A.length(), B.length(), dp);
		
		
	}
	
	private int matchWildCard(String A, String B, int i, int j, int [][] dp) {
		if(i <= 0 && j<= 0) {
			return 1;
		}
		if(j <= 0) {
			return 0;
		}
		if(i <= 0) {
			while(j>0) {
				if(B.charAt(j-1) != '*')
					break;
				j--;
			}
			if(j==0)
				return 1;
			else 
				return 0;
		}
		if(dp[A.length()][B.length()] != -1) {
			return dp[A.length()][B.length()];
		}
		if(A.charAt(A.length()-1) == B.charAt(B.length()-1)) {
			return  dp[A.length()][B.length()] = matchWildCard(A.substring(0, i-1), B.substring(0, j-1), i-1, j-1, dp);
		} else {
			if (B.charAt(B.length()-1) == '?') {
				return  dp[A.length()][B.length()] = matchWildCard(A.substring(0, i-1), B.substring(0, j-1) , i-1, j-1, dp);
			} else if (B.charAt(B.length()-1) == '*') {
				return  dp[A.length()][B.length()] = (int) Math.max(matchWildCard(A.substring(0,i-1), B.substring(0, j), i-1, j, dp), matchWildCard(A.substring(0, i), B.substring(0, j-1), i, j-1, dp));
			} else {
				return  dp[A.length()][B.length()] = 0;
			}
		}
	}
}

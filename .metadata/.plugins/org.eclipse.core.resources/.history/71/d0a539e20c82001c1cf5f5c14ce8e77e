import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;

public class MAxSumWithoutLargestElement {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int [] [] A = {{1,2,3,4},{2,3,4,5}};
		MAxSumWithoutLargestElement axSumWithoutLargestElement = new MAxSumWithoutLargestElement();
		System.out.println(axSumWithoutLargestElement.adjacent(A));
	}
	
	public int adjacent(int[][] A) {
		int [] finalAr = new int [A[0].length];
		for (int i = 0; i < finalAr.length; i++) {
			finalAr[i] = Math.max(A[0][i], A[1][i]);
		}
		int [] dp = new int[finalAr.length+1];
		dp[0] = finalAr[0];
		for (int i = 1; i < dp.length; i++) {
			dp[i] = -1;
		}
		return adjacentSum(finalAr, dp, finalAr.length);
    }
	
	private int adjacentSum (int [] ar, int [] dp, int n) {
		if(ar[n] == -1) {
			ar[n] = Math.max(adjacentSum(ar,dp, n-1), ar[n] + adjacentSum(ar, dp, n-2));
			return ar[n];
		} else {
			return ar[n];
		}
	}

}

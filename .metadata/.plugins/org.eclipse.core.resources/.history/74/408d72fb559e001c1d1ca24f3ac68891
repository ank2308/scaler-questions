import java.util.ArrayList;

public class MergeIntervals {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<Interval> intervals = new ArrayList<>();
		intervals.add(new Interval(1, 20));
		intervals.add(new Interval(3, 8));
		intervals.add(new Interval(9, 13));
		intervals.add(new Interval(12, 16));
		intervals.add(new Interval(14, 20));
		
		MergeIntervals mi = new MergeIntervals();
		mi.merge(intervals);
	}
	public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
		int [] start = new int [intervals.size()];
		int [] end = new int [intervals.size()];
		int index = 0;
		for (Interval interval : intervals) {
			start[index] = interval.start;
			end[index] = interval.end;
			index++;
		}
		
		for (int i = 0; i < intervals.size() -1 ;) {
			if(intervals.size() > i+1 && intervals.get(i+1).start >= intervals.get(i).start && intervals.get(i+1).start < intervals.get(i).end && intervals.get(i+1).end > intervals.get(i).end) {
				int tempStart = intervals.get(i).start;
				int tempEnd = intervals.get(i+1).end;
				intervals.remove(i);
				intervals.remove(i);
				intervals.add(i, new Interval(tempStart, tempEnd));				
			} else if (intervals.size() > i+1 && intervals.get(i+1).start >= intervals.get(i).start && intervals.get(i+1).start < intervals.get(i).end && intervals.get(i+1).end <= intervals.get(i).end) {
				intervals.remove(i+1);
			}
			else {
				i++;
			}
		}
		return intervals;
	}
}

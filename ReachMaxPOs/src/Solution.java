import java.util.Iterator;

public class Solution {

	public static void main(String[] args) {
		Solution solution = new Solution();
		int [] Arr = {67, 87, 37, 81, 56, 74, 81, 75, 15, 8, 63, 8, 44, 12, 7, 24, 57, 63, 81, 44, 59, 16, 39, 83, 90, 71, 24, 8, 95, 63, 60, 87, 52, 55, 96, 41, 70, 97, 7, 70, 87, 26, 80, 28, 80, 0, 42, 54, 28, 10, 81, 23, 23, 3, 57, 67, 1, 84, 70, 35, 7, 56, 93, 91, 93, 79, 4, 31, 93, 87, 77, 99, 10, 54, 52, 93, 21, 31, 91, 31, 59, 70, 52, 15, 60, 69, 33, 21, 93, 85, 67, 53, 25, 45, 45, 60, 20, 82, 32, 26, 1, 33, 98, 63, 76, 91, 93, 63, 44, 82, 75, 2, 82, 48, 89, 35, 39, 47, 95, 85, 62, 32, 34, 9, 75, 98, 42, 93, 92, 52, 82, 27, 10, 64, 28, 46, 82, 82, 99, 74, 87, 36, 79, 31, 35, 65, 68, 20, 97, 63, 26, 98, 31, 39, 3, 29, 0, 95, 63, 32, 18, 49, 47, 62, 77, 62, 60, 67, 25, 42, 69, 43, 20, 4, 89, 60, 15, 82, 15, 47, 43, 70, 77, 77, 47, 11, 48, 30, 45, 63, 90, 44, 18, 47, 85, 16, 32, 11, 23, 60, 8, 2, 38, 4, 31, 72, 54, 98, 36, 51, 100, 72, 19, 97, 71, 3, 2, 96, 28, 77, 43, 37, 89, 7, 100, 99, 27, 82, 37, 58, 25, 84, 76, 78, 35, 65, 37, 71, 81, 29, 19, 95, 49, 93, 53, 30, 57, 44, 83, 72, 66, 43, 52, 48, 7, 49, 53, 17, 10, 35, 65, 4, 0, 51, 70, 60, 73, 95, 22, 79, 41, 57, 14, 0, 92, 41, 63, 19, 80, 95, 36, 50, 41, 15, 99, 26, 3, 85, 94, 98, 23, 44, 7, 26, 0, 80, 20, 38, 58, 25, 100, 41, 16, 57, 34, 53, 26, 100, 73, 100, 73, 45, 72, 11, 20, 11, 56, 43, 99, 0, 3, 52, 96, 88, 5, 12, 98, 80, 48, 48, 26, 93, 100, 19, 60, 72, 25};
//		int [] Arr = {1,2,3,4,5};
		System.out.println(solution.solve(Arr));
		
	}
	
	public int solve(int[] A) {
        int jumps = 0;
        int maxPosReach = 0;
        int currMax = 0;
        int i =0;
        for (; i < A.length;i++ ) {
			if(i+A[i]>currMax) {
				currMax = i+A[i];
			}
			if(maxPosReach == i) {
				maxPosReach = currMax;
				jumps += 1;
			}
			if(maxPosReach >= A.length-1) {
				return jumps;
			}
			
		}
        
        
		return -1;
    }

}
